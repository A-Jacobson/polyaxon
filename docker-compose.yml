version: "3"

services:
  postgres:
    image: postgres:9.6-alpine
#    volumes:
#      - pg_data:/var/lib/postgresql/data
#      - pg_backups:/pg_backups
    environment:
      POSTGRES_USER: "polyaxon"
      POSTGRES_PASSWORD: "polyaxon"
    networks:
      - api

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3.6.12-management-alpine
    networks:
      - api
    ports:
      - "5672:5672"

  redis:
    image: redis:3.0-alpine
    networks:
      - api

  web:
    build:
      context: .
      dockerfile: ./DockerfileDev
    command: python3 api/manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    networks:
      - api
    depends_on:
      - rabbitmq
      - postgres
      - redis
    volumes:
      - .:/polyaxon
    ports:
      - "8000:8000"
      - "8001:8001"
      - "6006:6006"
      - "8888:8888"

    environment:
      DJANGO_SETTINGS_MODULE: api.settings
      MEMCACHE_LOCATION: "memcache:11211"
      SETTINGS_ENV_DIR: "dev"
      DATABASE_URL: "postgres://polyaxon:polyaxon@postgres:5432/polyaxon"
      POLYAXON_AMQP_URL: "amqp://rabbitmq:5672"
      POLYAXON_REDIS_CELERY_RESULT_BACKEND_URL: "redis://redis:6379/0"
      POLYAXON_REDIS_EXPERIMENTS_STATUS_URL: "redis://redis:6379/1"
      POLYAXON_REDIS_JOBS_STATUS_URL: "redis://redis:6379/2"
      POLYAXON_REDIS_JOB_CONTAINERS_URL: "redis://redis:6379/3"
      POLYAXON_REDIS_TO_STREAM_URL: "redis://redis:6379/4"
      POLYAXON_RABBITMQ_DEFAULT_USER: admin
      POLYAXON_RABBITMQ_DEFAULT_PASS: mypass

  worker:
    build:
      context: .
      dockerfile: ./DockerfileDev
    volumes:
      - .:/polyaxon
    environment:
      POLYAXON_AMQP_URL: "amqp://rabbitmq:5672"
      POLYAXON_REDIS_CELERY_RESULT_BACKEND_URL: "redis://redis:6379/0"
      POLYAXON_REDIS_EXPERIMENTS_STATUS_URL: "redis://redis:6379/1"
      POLYAXON_REDIS_JOBS_STATUS_URL: "redis://redis:6379/2"
      POLYAXON_REDIS_JOB_CONTAINERS_URL: "redis://redis:6379/3"
      POLYAXON_REDIS_TO_STREAM_URL: "redis://redis:6379/4"
    networks:
      - api
    depends_on:
      - rabbitmq

#volumes:
#  pg_data: {}
#  pg_backups: {}

networks:
  api:
