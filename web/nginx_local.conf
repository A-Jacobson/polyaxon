upstream polyaxon {
  server unix:/polyaxon/web/polyaxon.sock;
}

server {
    listen 80;

    error_log /polyaxon/logs/error.log debug;

    gzip                        on;
    gzip_disable                "msie6";
    gzip_types                  *;

    charset                     utf-8;
    client_max_body_size        4G;
    client_body_buffer_size     50m;
    client_body_in_file_only clean;
    sendfile on;
    send_timeout 600;
    keepalive_timeout           600;
    uwsgi_read_timeout 600;
    uwsgi_send_timeout 600;
    client_header_timeout 600;
    proxy_read_timeout 600;

    location /static/ {
        alias /polyaxon/static/;
        autoindex on;
        expires                   30d;
        add_header                Cache-Control private;
    }

    location / {
        uwsgi_pass  polyaxon;
        include     /etc/nginx/uwsgi_params;
    }

    error_page 500 502 503 504 /50x.html;

    location /get_error/500 {
         return 500;
    }
    location /get_error/502 {
         return 502;
    }
    location /get_error/503 {
         return 503;
    }
    location /get_error/504 {
         return 504;
    }

    location ~ /tensorboard/proxy/([-_.:\w]+)/(.*) {
        rewrite_log on;
        rewrite ^/tensorboard/proxy/([-_.:\w]+)/(.*) /$2 break;
        proxy_pass http://$1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Origin "";
    }

    location ~ /notebook/proxy/([-_.:\w]+)/(.*) {
        rewrite_log on;
        rewrite ^/notebook/proxy/([-_.:\w]+)/(.*) /notebook/proxy/$1/$2 break;
        proxy_pass http://$1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Origin "";
    }

    location /tmp/ {
        alias                     /tmp/;
        expires                   0;
        add_header                Cache-Control private;
        internal;
    }

    location /repos/ {
        alias                     /repos/;
        expires                   0;
        add_header                Cache-Control private;
        internal;
    }

    location /data/ {
        alias                     /data/;
        expires                   0;
        add_header                Cache-Control private;
        internal;
    }

    location /outputs/ {
        alias                     /outputs/;
        expires                   0;
        add_header                Cache-Control private;
        internal;
    }
}
