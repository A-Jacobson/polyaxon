# set REMOTE_ADDR from any internal proxies
# see http://nginx.org/en/docs/http/ngx_http_realip_module.html
set_real_ip_from 127.0.0.1;
set_real_ip_from 10.0.0.0/8;
real_ip_header X-Forwarded-For;
real_ip_recursive on;

# SSL configuration
ssl_certificate      /etc/ssl/polyaxon.com.crt;
ssl_certificate_key  /etc/ssl/polyaxon.com.key;

# NOTE: These settings may not be the most-current recommended
# defaults
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
ssl_prefer_server_ciphers on;
ssl_session_cache shared:SSL:128m;
ssl_session_timeout 10m;

server {
  listen                      80;
  server_name                 %s;
  rewrite                     ^ https://$server_name$request_uri? permanent;
}

upstream polyaxon {
  server unix:/polyaxon/web/polyaxon.sock;
}

server {
  listen                      443 ssl;
  server_name                 %s;
  keepalive_timeout           0;

  proxy_set_header   Host                 $http_host;
  proxy_set_header   X-Forwarded-Proto    $scheme;
  proxy_set_header   X-Forwarded-For      $remote_addr;
  proxy_redirect     off;

  error_log /polyaxon/logs/error.log warn;

  gzip                        on;
  gzip_disable                "msie6";
  gzip_types                  *;

  charset                     utf-8;
  client_max_body_size        1024M;

  location /static/ {
    alias /polyaxon/static/;
    autoindex on;
    expires                   0;
    add_header                Cache-Control private;
  }

  location / {
    uwsgi_pass  polyaxon;
    include     /etc/nginx/uwsgi_params;
  }

  error_page 500 502 503 504 /50x.html;

  location ~ /tensorboard/proxy/([-_.:\w]+)/(.*) {
    resolver kube-dns.kube-system.svc.cluster.local valid=5s;
    rewrite_log on;
    rewrite ^/tensorboard/proxy/([-_.:\w]+)/(.*) /$2 break;
    proxy_pass http://$1;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Origin "";
  }

   location ~ /notebook/proxy/([-_.:\w]+)/(.*) {
    resolver kube-dns.kube-system.svc.cluster.local valid=5s;
    rewrite_log on;
    rewrite ^/notebook/proxy/([-_.:\w]+)/(.*) /notebook/proxy/$1/$2 break;
    proxy_pass http://$1;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Origin "";
  }

  location /repos/ {
    root                      /repos;
    expires                   0;
    add_header                Cache-Control private;
    internal;
  }

  location /data/ {
    root                      /data;
    expires                   0;
    add_header                Cache-Control private;
    internal;
  }

  location /outputs/ {
    root                      /outputs;
    expires                   0;
    add_header                Cache-Control private;
    internal;
  }
}
