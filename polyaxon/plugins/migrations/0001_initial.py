# Generated by Django 2.0.3 on 2018-04-14 07:40

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import libs.models
import libs.spec_validation
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('repos', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotebookJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('config', django.contrib.postgres.fields.jsonb.JSONField(help_text='The compiled polyaxonfile for plugin job.', validators=[libs.spec_validation.validate_plugin_spec_config])),
                ('code_reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='repos.CodeReference')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, libs.models.LastStatusMixin),
        ),
        migrations.CreateModel(
            name='NotebookJobStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('message', models.CharField(blank=True, max_length=256, null=True)),
                ('status', models.CharField(blank=True, choices=[('Created', 'Created'), ('Building', 'Building'), ('Running', 'Running'), ('Succeeded', 'Succeeded'), ('Failed', 'Failed'), ('Stopped', 'Stopped'), ('UNKNOWN', 'UNKNOWN')], default='Created', max_length=64, null=True)),
                ('details', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='plugins.NotebookJob')),
            ],
            options={
                'abstract': False,
                'ordering': ['created_at'],
                'verbose_name_plural': 'Notebook Job Statuses',
            },
        ),
        migrations.CreateModel(
            name='TensorboardJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('config', django.contrib.postgres.fields.jsonb.JSONField(help_text='The compiled polyaxonfile for plugin job.', validators=[libs.spec_validation.validate_plugin_spec_config])),
                ('code_reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='repos.CodeReference')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, libs.models.LastStatusMixin),
        ),
        migrations.CreateModel(
            name='TensorboardJobStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('message', models.CharField(blank=True, max_length=256, null=True)),
                ('status', models.CharField(blank=True, choices=[('Created', 'Created'), ('Building', 'Building'), ('Running', 'Running'), ('Succeeded', 'Succeeded'), ('Failed', 'Failed'), ('Stopped', 'Stopped'), ('UNKNOWN', 'UNKNOWN')], default='Created', max_length=64, null=True)),
                ('details', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='plugins.TensorboardJob')),
            ],
            options={
                'abstract': False,
                'ordering': ['created_at'],
                'verbose_name_plural': 'Tensorboard Job Statuses',
            },
        ),
        migrations.AddField(
            model_name='tensorboardjob',
            name='job_status',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='plugins.TensorboardJobStatus'),
        ),
        migrations.AddField(
            model_name='tensorboardjob',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tensorboard_jobs', to='projects.Project'),
        ),
        migrations.AddField(
            model_name='tensorboardjob',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notebookjob',
            name='job_status',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='plugins.NotebookJobStatus'),
        ),
        migrations.AddField(
            model_name='notebookjob',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notebook_jobs', to='projects.Project'),
        ),
        migrations.AddField(
            model_name='notebookjob',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
    ]
